{"paragraphs":[{"text":"%spark2\n\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.SQLContext\n\nsc.version\n\nval sparkSession = SparkSession\n      .builder()\n      .appName(\"testSpark\")\n      .config(\"spark.sql.crossJoin.enabled\", \"true\")\n      .config(\"zookeeper.znode.parent\", \"/hbase-unsecure\")\n      .config(\"spark.sql.autoBroadcastJoinThreshold\", 1024*1024*200)\n      .getOrCreate()\n\nval dataFrame = sparkSession.read\n      .format(\"geomesa\")\n      .options(Map(\"bigtable.table.name\" -> \"siteexposure_1M\"))\n      .option(\"geomesa.feature\", \"event\")\n      .load()\n      \nval dataFramewildfireevent = sparkSession.read\n      .format(\"geomesa\")\n      .options(Map(\"bigtable.table.name\" -> \"CatEvents_Fire_2000_US_Wildfire_Footprint\"))\n      .option(\"geomesa.feature\", \"wildfireevent\")\n      .load()\n\n    dataFramewildfireevent.createOrReplaceTempView(\n      \"wildfireevent\")\n\n val sqlQuery =\n          \"select /*+ BROADCAST (wildfireevent) */ event.portfolio_id from  event  join wildfireevent  on  st_intersects(event.geom,  wildfireevent.geometry ) where event.site_id = '102000001941' \"\n\n\n sparkSession.sql(sqlQuery).explain\n \n    val resultDataFrame = sparkSession.sql(sqlQuery)\n    \n \n    resultDataFrame.show\n\n    println(\"DONE\")\n","user":"admin","dateUpdated":"2017-08-03T14:28:17+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501768436591_-1131495791","id":"20170803-135356_1297685666","dateCreated":"2017-08-03T13:53:56+0000","dateStarted":"2017-08-03T14:26:22+0000","dateFinished":"2017-08-03T14:26:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:790","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.SQLContext\n\nres969: String = 2.1.1.2.6.1.0-129\n\nsparkSession: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@6dcf799e\n\ndataFrame: org.apache.spark.sql.DataFrame = [__fid__: string, portfolio_id: bigint ... 107 more fields]\n\ndataFramewildfireevent: org.apache.spark.sql.DataFrame = [__fid__: string, OBJECTID: bigint ... 24 more fields]\n\nsqlQuery: String = \"select /*+ BROADCAST (wildfireevent) */ event.portfolio_id from  event  join wildfireevent  on  st_intersects(event.geom,  wildfireevent.geometry ) where event.site_id = '102000001941' \"\n== Physical Plan ==\n*Project [portfolio_id#11013L]\n+- CartesianProduct UDF:st_intersects(geom#11119, geometry#12204)\n   :- *Project [portfolio_id#11013L, geom#11119]\n   :  +- *Filter isnotnull(site_id#11016)\n   :     +- *Scan GeoMesaRelation(org.apache.spark.sql.SQLContext@1805e52d,SimpleFeatureTypeImpl event identified extends Feature(portfolio_id:portfolio_id,peril_id:peril_id,account_id:account_id,site_id:site_id,arcgis_id:arcgis_id,nz_grid_id:nz_grid_id,shape:shape,sitenum:sitenum,sitename:sitename,site_lat:site_lat,account_num:account_num,site_long:site_long,country_id:country_id,currency:currency,g_mc_level1_id:g_mc_level1_id,g_mc_level2_id:g_mc_level2_id,g_mc_level3_id:g_mc_level3_id,g_mc_level4_id:g_mc_level4_id,g_mc_level5_id:g_mc_level5_id,g_mc_level6_id:g_mc_level6_id,g_level:g_level,g_level_source_id:g_level_source_id,full_address:full_address,street_addr:street_addr,municipality:municipality,postalcode:postalcode,cresta:cresta,blg_num:blg_num,blg_name:blg_name,lob1:lob1,lob2:lob2,occ_short_desc:occ_short_desc,const_short_desc:const_short_desc,m_air_occind:m_air_occind,m_air_occ:m_air_occ,m_air_constind:m_air_constind,m_air_const:m_air_const,m_rms_occind:m_rms_occind,m_rms_occ:m_rms_occ,m_rms_constind:m_rms_constind,m_rms_const:m_rms_const,num_stories:num_stories,year_built:year_built,expire_date:expire_date,incept_date:incept_date,cov1val:cov1val,cov2val:cov2val,cov3val:cov3val,cov4val:cov4val,cov5val:cov5val,cov6val:cov6val,risk_count:risk_count,shift_count:shift_count,payroll:payroll,empl_count:empl_count,calc_num_empl:calc_num_empl,max_empl:max_empl,shift1:shift1,shift2:shift2,shift3:shift3,shift4:shift4,deduct_type:deduct_type,limit_type:limit_type,premium:premium,site_limit:site_limit,site_bl_limit:site_bl_limit,site_deduct:site_deduct,site_bl_deduct:site_bl_deduct,cmb_deduct:cmb_deduct,cmb_limit:cmb_limit,agg_limit:agg_limit,cov1limit:cov1limit,cov1deduct:cov1deduct,cov2limit:cov2limit,cov2deduct:cov2deduct,cov3limit:cov3limit,cov3deduct:cov3deduct,cov4limit:cov4limit,cov4deduct:cov4deduct,cov4days:cov4days,cov5limit:cov5limit,cov5deduct:cov5deduct,cov6limit:cov6limit,cov6deduct:cov6deduct,rms_distance_coast:rms_distance_coast,s_udf_met1:s_udf_met1,s_udf_met2:s_udf_met2,s_udf_met3:s_udf_met3,s_udf_met4:s_udf_met4,s_udf_met5:s_udf_met5,s_udf_met6:s_udf_met6,s_udf_met7:s_udf_met7,s_udf_met8:s_udf_met8,s_udf_met9:s_udf_met9,s_udf_met10:s_udf_met10,s_udf_attr1:s_udf_attr1,s_udf_attr2:s_udf_attr2,s_udf_attr3:s_udf_attr3,s_udf_attr4:s_udf_attr4,s_udf_attr5:s_udf_attr5,s_udf_attr6:s_udf_attr6,s_udf_attr7:s_udf_attr7,s_udf_attr8:s_udf_attr8,s_udf_attr9:s_udf_attr9,s_udf_attr10:s_udf_attr10,site_comments:site_comments,geom:geom,shapegeom:shapegeom),StructType(StructField(__fid__,StringType,false), StructField(portfolio_id,LongType,true), StructField(peril_id,LongType,true), StructField(account_id,StringType,true), StructField(site_id,StringType,true), StructField(arcgis_id,LongType,true), StructField(nz_grid_id,StringType,true), StructField(shape,StringType,true), StructField(sitenum,StringType,true), StructField(sitename,StringType,true), StructField(site_lat,DoubleType,true), StructField(account_num,StringType,true), StructField(site_long,DoubleType,true), StructField(country_id,LongType,true), StructField(currency,StringType,true), StructField(g_mc_level1_id,StringType,true), StructField(g_mc_level2_id,StringType,true), StructField(g_mc_level3_id,StringType,true), StructField(g_mc_level4_id,StringType,true), StructField(g_mc_level5_id,StringType,true), StructField(g_mc_level6_id,StringType,true), StructField(g_level,LongType,true), StructField(g_level_source_id,LongType,true), StructField(full_address,StringType,true), StructField(street_addr,StringType,true), StructField(municipality,StringType,true), StructField(postalcode,StringType,true), StructField(cresta,StringType,true), StructField(blg_num,LongType,true), StructField(blg_name,StringType,true), StructField(lob1,StringType,true), StructField(lob2,StringType,true), StructField(occ_short_desc,StringType,true), StructField(const_short_desc,StringType,true), StructField(m_air_occind,StringType,true), StructField(m_air_occ,StringType,true), StructField(m_air_constind,StringType,true), StructField(m_air_const,StringType,true), StructField(m_rms_occind,StringType,true), StructField(m_rms_occ,StringType,true), StructField(m_rms_constind,StringType,true), StructField(m_rms_const,StringType,true), StructField(num_stories,LongType,true), StructField(year_built,LongType,true), StructField(expire_date,StringType,true), StructField(incept_date,StringType,true), StructField(cov1val,DoubleType,true), StructField(cov2val,DoubleType,true), StructField(cov3val,DoubleType,true), StructField(cov4val,DoubleType,true), StructField(cov5val,DoubleType,true), StructField(cov6val,DoubleType,true), StructField(risk_count,LongType,true), StructField(shift_count,LongType,true), StructField(payroll,DoubleType,true), StructField(empl_count,DoubleType,true), StructField(calc_num_empl,DoubleType,true), StructField(max_empl,DoubleType,true), StructField(shift1,DoubleType,true), StructField(shift2,DoubleType,true), StructField(shift3,DoubleType,true), StructField(shift4,DoubleType,true), StructField(deduct_type,StringType,true), StructField(limit_type,StringType,true), StructField(premium,DoubleType,true), StructField(site_limit,DoubleType,true), StructField(site_bl_limit,DoubleType,true), StructField(site_deduct,DoubleType,true), StructField(site_bl_deduct,DoubleType,true), StructField(cmb_deduct,DoubleType,true), StructField(cmb_limit,DoubleType,true), StructField(agg_limit,DoubleType,true), StructField(cov1limit,DoubleType,true), StructField(cov1deduct,DoubleType,true), StructField(cov2limit,DoubleType,true), StructField(cov2deduct,DoubleType,true), StructField(cov3limit,DoubleType,true), StructField(cov3deduct,DoubleType,true), StructField(cov4limit,DoubleType,true), StructField(cov4deduct,DoubleType,true), StructField(cov4days,DoubleType,true), StructField(cov5limit,DoubleType,true), StructField(cov5deduct,DoubleType,true), StructField(cov6limit,DoubleType,true), StructField(cov6deduct,DoubleType,true), StructField(rms_distance_coast,DoubleType,true), StructField(s_udf_met1,DoubleType,true), StructField(s_udf_met2,DoubleType,true), StructField(s_udf_met3,DoubleType,true), StructField(s_udf_met4,DoubleType,true), StructField(s_udf_met5,DoubleType,true), StructField(s_udf_met6,DoubleType,true), StructField(s_udf_met7,DoubleType,true), StructField(s_udf_met8,DoubleType,true), StructField(s_udf_met9,DoubleType,true), StructField(s_udf_met10,DoubleType,true), StructField(s_udf_attr1,StringType,true), StructField(s_udf_attr2,StringType,true), StructField(s_udf_attr3,StringType,true), StructField(s_udf_attr4,StringType,true), StructField(s_udf_attr5,StringType,true), StructField(s_udf_attr6,StringType,true), StructField(s_udf_attr7,StringType,true), StructField(s_udf_attr8,StringType,true), StructField(s_udf_attr9,StringType,true), StructField(s_udf_attr10,StringType,true), StructField(site_comments,StringType,true), StructField(geom,org.apache.spark.sql.PointUDT@2884437a,true), StructField(shapegeom,org.apache.spark.sql.PointUDT@2884437a,true)),Map(bigtable.table.name -> siteexposure_1M, geomesa.feature -> event),Filter.INCLUDE,None) [portfolio_id#11013L,geom#11119,site_id#11016] PushedFilters: [IsNotNull(site_id), *EqualTo(site_id,102000001941)], ReadSchema: struct<portfolio_id:bigint,geom:struct<wkb:binary>>\n   +- *Scan GeoMesaRelation(org.apache.spark.sql.SQLContext@1805e52d,SimpleFeatureTypeImpl wildfireevent identified extends Feature(OBJECTID:OBJECTID,ArcGIS_DBO_CatEvents_Fire_2000:ArcGIS_DBO_CatEvents_Fire_2000,PERIMETER:PERIMETER,FIRE_NAME:FIRE_NAME,COMPLEX:COMPLEX,ACRES:ACRES,MILES:MILES,YEAR_:YEAR_,AGENCY:AGENCY,UNITID:UNITID,FIRENUM:FIRENUM,TIME_:TIME_,METHOD:METHOD,SOURCE:SOURCE,TRAVEL:TRAVEL,MAPSCALE:MAPSCALE,PROJECTION:PROJECTION,UNITS:UNITS,DATUM:DATUM,COMMENTS:COMMENTS,Shape_STArea__:Shape_STArea__,Shape_STLength__:Shape_STLength__,SHAPE.STArea:SHAPE.STArea,SHAPE.STLength:SHAPE.STLength,geometry:geometry),StructType(StructField(__fid__,StringType,false), StructField(OBJECTID,LongType,true), StructField(ArcGIS_DBO_CatEvents_Fire_2000,DoubleType,true), StructField(PERIMETER,DoubleType,true), StructField(FIRE_NAME,StringType,true), StructField(COMPLEX,StringType,true), StructField(ACRES,DoubleType,true), StructField(MILES,DoubleType,true), StructField(YEAR_,StringType,true), StructField(AGENCY,StringType,true), StructField(UNITID,StringType,true), StructField(FIRENUM,StringType,true), StructField(TIME_,StringType,true), StructField(METHOD,StringType,true), StructField(SOURCE,StringType,true), StructField(TRAVEL,StringType,true), StructField(MAPSCALE,StringType,true), StructField(PROJECTION,StringType,true), StructField(UNITS,StringType,true), StructField(DATUM,StringType,true), StructField(COMMENTS,StringType,true), StructField(Shape_STArea__,DoubleType,true), StructField(Shape_STLength__,DoubleType,true), StructField(SHAPE.STArea,DoubleType,true), StructField(SHAPE.STLength,DoubleType,true), StructField(geometry,org.apache.spark.sql.PolygonUDT@d365198,true)),Map(bigtable.table.name -> CatEvents_Fire_2000_US_Wildfire_Footprint, geomesa.feature -> wildfireevent),Filter.INCLUDE,None) [geometry#12204] ReadSchema: struct<geometry:struct<wkb:binary>>\n\nresultDataFrame: org.apache.spark.sql.DataFrame = [portfolio_id: bigint]\n+------------+\n|portfolio_id|\n+------------+\n+------------+\n\nDONE\n"}]}},{"text":"%spark2\n\n\n\n    //val sqlQuery =\n    //  \"select OBJECTID, ACRES from wildfireevent  where OBJECTID < 100 limit 10\"\n\n   // val sqlQuery =\n     //     \"select /*+ BROADCAST (wildfireevent) */  event.portfolio_id, sum(event.s_udf_met1), avg(event.s_udf_met1) from event  , wildfireevent  where  st_intersects(event.geom , wildfireevent.geometry) group by event.portfolio_id\"\n/*\nselect a.shape.STIntersection(b.shape)\nfrom gis.usa_10_block_group a\njoin gis.usa_10_mkt_definition b\non a.shape.STIntersects(b.shape) = 1\nwhere b.mktname = 'Loop'\n*/\n","user":"admin","dateUpdated":"2017-08-03T14:28:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501768544916_130019756","id":"20170803-135544_187660627","dateCreated":"2017-08-03T13:55:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:791"}],"name":"Usecase_4","id":"2CQNKNPAH","angularObjects":{"2CQ2GZDDE:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CQBK1CKC:shared_process":[],"2CNW8AS1D:shared_process":[],"2CMY8N527:shared_process":[],"2C4U48MY3_spark2:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}